name: CMake Build Matrix

on: [push]

jobs:
  build:
    name: "Build ${{ matrix.cc }} ${{ matrix.build_type }} for ubuntu-latest"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cc: [ gcc, clang ]
        build_type: [ debug, release ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install latest CMake
        run: sudo snap install cmake --classic

      - name: Configure
        run: /snap/bin/cmake --preset=${{ matrix.cc }}-${{ matrix.build_type }}-warnings

      - name: Build
        run: /snap/bin/cmake --build --preset=${{ matrix.cc }}-${{ matrix.build_type }}-warnings

      - name: Pack
        if: ${{ github.event.ref == 'refs/heads/dev' }}
        run: /snap/bin/cpack --preset=${{ matrix.cc }}-${{ matrix.build_type }}-warnings

      - name: Upload
        if: ${{ github.event.ref == 'refs/heads/dev' }}
        uses: actions/upload-artifact@v4
        with:
          path: ./build/${{ matrix.cc }}-${{ matrix.build_type }}-warnings/emulator-0.1.1-Linux.tar.gz
          name: "ubuntu-latest-${{ matrix.cc }}-${{ matrix.build_type }}.tar.gz"

  release:
    if: ${{ github.event.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Store Release url
        run: |
          echo "${{ steps.create_release.outputs.upload_url }}" > ./upload_url

      - uses: actions/upload-artifact@v4
        with:
          path: ./upload_url
          name: upload_url